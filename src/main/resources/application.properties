server.port=8080

debug=true

#   显示sql日志
spring.shardingsphere.props.sql-show=true

#   配置数据源列表-常量配置
#spring.shardingsphere.datasource.names=m_u,s_u,m_s_1,s_s_1,m_s_2,s_s_2
spring.shardingsphere.datasource.names=m_u,s_u

#   配置数据源
#   主库-常量配置
spring.shardingsphere.datasource.m_u.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.m_u.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m_u.jdbc-url=jdbc:mysql://mysql:3306/shardUser?useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.m_u.username=root
spring.shardingsphere.datasource.m_u.password=root
#   从库-常量配置
spring.shardingsphere.datasource.s_u.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.s_u.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.s_u.jdbc-url=jdbc:mysql://mysql:3306/shardUser?useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.s_u.username=root
spring.shardingsphere.datasource.s_u.password=root

#   配置主从-非常量配置
#   user-m-r为主从配置别名
spring.shardingsphere.rules.readwrite-splitting.data-sources.user-m-r.type=Static
spring.shardingsphere.rules.readwrite-splitting.data-sources.user-m-r.props.write-data-source-name=m_u
spring.shardingsphere.rules.readwrite-splitting.data-sources.user-m-r.props.read-data-source-names=s_u

#   主键生成策略配置-非常量配置
#   user为水平分表的逻辑表名（物理表名：user_1，user_2）
spring.shardingsphere.rules.sharding.tables.user.key-generate-strategy.column=user_id
spring.shardingsphere.rules.sharding.tables.user.key-generate-strategy.key-generator-name=snowflake

#   数据节点配置-非常量配置
#   user为逻辑表名；user-m-r为逻辑库名
spring.shardingsphere.rules.sharding.tables.user.actual-data-nodes=user-m-r.user_$->{1..2}
#   配置数据表分片逻辑列名
spring.shardingsphere.rules.sharding.tables.user.table-strategy.standard.sharding-column=user_id
#   配置分片逻辑别名
spring.shardingsphere.rules.sharding.tables.user.table-strategy.standard.sharding-algorithm-name=user-inline
#   配置分片逻辑
spring.shardingsphere.rules.sharding.sharding-algorithms.user-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.user-inline.props.algorithm-expression=user_$->{user_id % 2 + 1}